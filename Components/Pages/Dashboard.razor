@page "/Dashboard"
@inject AoService aoService
@using BlazorApp.Components.Model
@using BlazorApp.Components.Service
@using System.Linq


<h3 class="text-xl font-bold mb-4">Dashboard</h3>

@if (aoffres != null && aoffres.Any())
{
  <div class="overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200  table-hover">
      <thead class="bg-gray-200">
        <tr>
          <th colspan="2" class="py-3 text-center">
            Table Header
          </th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        @foreach (var ao in aoffres)
        {
          <tr>
            <td class="px-4 py-2 text-left">
              <a href="@($"/{ao.Id}")" class="flex items-center">
                <!-- Use flex to align icon and text vertically -->
                <i class="fas fa-spinner text-lg mr-4"></i> <!-- Use 'fas' for Font Awesome 5 -->
                <b class="text-black">@ao.Titre</b><br>
                <span class="text-gray-600">@ao.Description</span>
              </a>
            </td>


            <td class="px-4 py-2 text-right">
              <div class="flex flex-col items-end"> <!-- Use flex-col to stack items vertically -->
                <div class="flex items-center">
                  <i class="fa-solid fa-calendar-days mr-2"></i>
                  <span class="mr-2 text-base">Published @ao.DateDemande.ToString("yyyy-MM-dd")</span>
                  <svg id="g_28_tooltip" viewBox="0 150 20 22" style="" class="mets-icon svg-calendar" focusable="false"
                    tabindex="-1" width="16" height="16"></svg>
                </div>
                <div class="flex items-center mt-2">
                  <i class="fa-solid fa-stopwatch mr-2"></i>&nbsp&nbsp&nbsp&nbsp
                  <span class="mr-2 text-base">Closed @ao.DelaisR.ToString("yyyy-MM-dd")</span>
                  <svg id="g_29_tooltip" viewBox="400 200 20 20" style="" class="mets-icon svg-clock" focusable="false"
                    tabindex="-1" width="16" height="16"></svg>
                </div>
              </div>
            </td>

          </tr>
        }
      </tbody>
    </table>
  </div>
}
else
{
  <p class="text-center mt-4">No data available.</p>
}


@code {
  List<AO> aoffres;

  protected override async Task OnInitializedAsync()
  {
    // Load data asynchronously
    aoffres = await aoService.GetAo();

    // Sort the list by Titre property
    aoffres = aoffres.OrderBy(ao => ao.Titre).ToList();
  }
}